{-- 

Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.

--}

limit = 4000000

fib :: Integer -> Integer
fib 1 = 1
fib 2 = 2
fib n = fib(n-1) + fib(n-2)

isEven :: Integer -> Bool
isEven n = n `mod` 2 == 0

fibSum :: [Integer] -> Integer -> [Integer]
fibSum xs n = if (value > limit) then xs else (fibSum (xs ++ evenedValue) (n + 1))
          where value = fib n
                evenedValue = if isEven value then [value] else []

main = print (sum (fibSum [] 1))
